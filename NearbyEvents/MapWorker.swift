//
//  MapWorker.swift
//  NearbyEvents
//
//  Created by Ezra Berch on 12/31/18.
//  Copyright (c) 2018 Ezra Berch. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreLocation

class MapWorker : NSObject, CLLocationManagerDelegate
{
    
    var locationmanager : CLLocationManager?
    var completion: ((Map.ConfigureMap.Response) -> Void)?
    
    func configureMap(completion: @escaping (Map.ConfigureMap.Response) -> Void)
    {
        self.completion = completion
        self.locationmanager = CLLocationManager()
        self.locationmanager!.delegate = self
        self.locationmanager!.desiredAccuracy = kCLLocationAccuracyBest
        self.locationmanager!.requestWhenInUseAuthorization()
        self.locationmanager!.requestLocation()
    }
    
    func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {
        let response = Map.ConfigureMap.Response(latitude: locations[0].coordinate.latitude, longitude: locations[0].coordinate.longitude)
        self.completion!(response)
    }
    
    func locationManager(_ manager: CLLocationManager, didFailWithError error: Error) {
        
    }
    
    func locationManager(_ manager: CLLocationManager, didChangeAuthorization status: CLAuthorizationStatus) {
        if status == CLAuthorizationStatus.authorizedWhenInUse {
            self.locationmanager!.requestLocation()
        } else if status == CLAuthorizationStatus.denied {
            //If user denies authorizes, use NYC as a default area
            let response = Map.ConfigureMap.Response(latitude: 40.7, longitude: -74)
            self.completion!(response)
        }
    }
}
